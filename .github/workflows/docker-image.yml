name: Docker Image CI

on:
  push:
    branches: ["dev"]
  pull_request:
    branches: ["dev"]
env:
  # 设置 docker 镜像名
  IMAGE_NAME: obsidian-why

jobs:
  build:
    runs-on: ubuntu-latest
    # https://stackoverflow.com/questions/67023441/deploy-docker-container-with-compose-github-actions
    defaults:
      run:
        # working-directory: ./web
        working-directory: .

    steps:
      # https://docs.github.com/en/actions/publishing-packages/publishing-docker-images#publishing-images-to-docker-hub
      # https://zhuanlan.zhihu.com/p/171516461?utm_source=wechat_session&utm_medium=social&utm_oi=1071532971839766528
      - uses: actions/checkout@v3
      - name: Check out the repo and build the Docker image
        # run: docker build . --file Dockerfile --tag obsidian-why
        # run: docker-compose --file ../docker-compose-dev.yml up -d
        run: |
          docker build ./web --file Dockerfile
          docker build ./perlite --file Dockerfile

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Push image
        run: |
          docker tag sec77/perlite:latest paranoiawhy/obsidian-backend
          docker tag sec77/perlite_web:stable paranoiawhy/obsidian-frontend
          
          docker push paranoiawhy/obsidian-backend
          docker push paranoiawhy/obsidian-frontend

          # # 拼接镜像 id, 这个镜像 id 就是在使用 docker 镜像时 pull 后面的名字。
          # IMAGE_ID=paranoiawhy/$IMAGE_NAME

          # # 将所有的大写字母转为小写
          # IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          # # 从 GitHub.ref 中取出版本
          # VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # # 从 tag 名字中替换 v 字符
          # # [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          # # Use Docker `latest` tag convention
          # [ "$VERSION" == "dev" ] && VERSION=latest

          # echo IMAGE_ID=$IMAGE_ID
          # echo VERSION=$VERSION
          # # 设置镜像 id 和版本号
          # docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          # # 进行 push
          # docker push $IMAGE_ID:$VERSION
