name: Docker Image CI

on:
  push:
    branches: ["dev"]
  pull_request:
    branches: ["dev"]
env:
  # 设置 docker 镜像名
  IMAGE_NAME: obsidian-why

jobs:
  build:
    runs-on: ubuntu-latest
    # https://stackoverflow.com/questions/67023441/deploy-docker-container-with-compose-github-actions
    defaults:
      run:
        working-directory: ./web

    steps:
      # - uses: actions/checkout@v3
      # - name: Build the Docker image
      #   run: docker build . --file Dockerfile --tag paranoiawhy_obsidian:$(date +%s)

      # https://docs.github.com/en/actions/publishing-packages/publishing-docker-images#publishing-images-to-docker-hub
      - uses: actions/checkout@v3
      - name: Check out the repo and build the Docker image
        run: docker build . --file Dockerfile --tag obsidian-why

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Push image
        run: |
          # 拼接镜像 id, 这个镜像 id 就是在使用 docker 镜像时 pull 后面的名字。
          IMAGE_ID=paranoiawhy/$IMAGE_NAME

          # 将所有的大写字母转为小写
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          # 从 GitHub.ref 中取出版本
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # 从 tag 名字中替换 v 字符
          # [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          # Use Docker `latest` tag convention
          [ "$VERSION" == "dev" ] && VERSION=latest

          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          # 设置镜像 id 和版本号
          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          # 进行 push
          docker push $IMAGE_ID:$VERSION

      # - name: Extract metadata (tags, labels) for Docker
      #   id: meta
      #   uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
      #   with:
      #     images: paranoiawhy/obsidian
      #     tags: latest

      # - name: Build and push Docker images
      #   id: docker_build
      #   uses: docker/build-push-action@v2.3.0
      #   with:
      #     context: .
      #     push: true
      #     tags: ${{ steps.meta.outputs.tags }}
      #     labels: ${{ steps.meta.outputs.labels }}
          # tags: |
          #   ${{env.VERSION_TAG}}
          #   ${{env.LASTEST_TAG}}
          # build-args: |
          #   ${{steps.version_step.outputs.version}}
